# Generated by Django 5.2.7 on 2025-10-20 07:01

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PhoneBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brand_logos/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Phone Brand',
                'verbose_name_plural': 'Phone Brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PhoneProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class or name', max_length=50)),
                ('estimated_time', models.PositiveIntegerField(default=30, help_text='Estimated repair time in minutes')),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order to display in lists')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Phone Problem',
                'verbose_name_plural': 'Phone Problems',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PhoneModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='phone_images/')),
                ('release_year', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_models', to='product.phonebrand')),
            ],
            options={
                'verbose_name': 'Phone Model',
                'verbose_name_plural': 'Phone Models',
                'ordering': ['-release_year', 'name'],
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('customer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('customer_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Sum of all repair item prices', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('item_discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total discount from individual items', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('additional_discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Additional discount percentage on final amount', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('additional_discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Additional fixed discount amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_intent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True, help_text='Customer notes or special instructions')),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for staff')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('phone_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='product.phonemodel')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_type', models.CharField(choices=[('original', 'Original'), ('duplicate', 'Duplicate')], default='original', max_length=20)),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Original base price', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('final_price', models.DecimalField(decimal_places=2, help_text='Price after discounts', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('warranty_days', models.PositiveIntegerField(default=10)),
                ('warranty_expires_at', models.DateField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='product.order')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='product.phoneproblem')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RepairPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_type', models.CharField(choices=[('original', 'Original'), ('duplicate', 'Duplicate')], max_length=20)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Discount in percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Fixed discount amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('in_stock', models.BooleanField(default=True)),
                ('warranty_days', models.PositiveIntegerField(default=90, help_text='Warranty in days')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repair_prices', to='product.phonemodel')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repair_prices', to='product.phoneproblem')),
            ],
            options={
                'verbose_name': 'Repair Price',
                'verbose_name_plural': 'Repair Prices',
                'ordering': ['phone_model', 'problem', 'part_type'],
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_number'], name='product_ord_order_n_3471b0_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status', 'payment_status'], name='product_ord_status_5fc7de_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['-created_at'], name='product_ord_created_149036_idx'),
        ),
        migrations.AddIndex(
            model_name='repairprice',
            index=models.Index(fields=['phone_model', 'problem'], name='product_rep_phone_m_913a63_idx'),
        ),
        migrations.AddIndex(
            model_name='repairprice',
            index=models.Index(fields=['part_type', 'is_active'], name='product_rep_part_ty_99f85b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='repairprice',
            unique_together={('phone_model', 'problem', 'part_type')},
        ),
    ]
